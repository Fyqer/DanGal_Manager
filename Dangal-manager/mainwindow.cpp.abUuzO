#include "mainwindow.h"
#include "generate_dialog.h"
#include "ui_mainwindow.h"
#include <QCryptographicHash>
#include <QStringListModel>
#include <QFile>
#include <QApplication>
#include <QtGui>
#include <thread>
#include <qobject.h>
#include<QDebug>
MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    readFile();
    fileWatcher();
    connect(ui->PasswordListView,SIGNAL(clicked ( const QModelIndex & index )),this,SLOT(showData(
    QModelIndex index )));
}

MainWindow::~MainWindow()
{
    delete ui;
}


QString hashPassword(QString password )
{
    QString salt  = password.append("saltyString");
    return QString(QCryptographicHash::hash((password.toUtf8().constData()),QCryptographicHash::Md5).toHex());
}


void MainWindow::on_Generate_button_clicked()
{
    Generate_dialog Generate_dialog;
    Generate_dialog.setModal(true);
    Generate_dialog.exec();
}



void MainWindow::readFile()
{

    QStringList *allLines = new QStringList();
    allLines->clear();
    QStringListModel *linesModel = new QStringListModel(*allLines, NULL);

    QFile file("secure_secrets.txt");
    if (!file.open(QIODevice::ReadOnly | QIODevice::Text))
        return;

    while (!file.atEnd()) {
        QByteArray line = file.readLine();
        const char *line_c = line.data();
        QString line_str = QString(QLatin1String(line_c));
        allLines->append(line_str);
    }
    linesModel->setStringList(*allLines);
    ui->PasswordListView->setModel(linesModel);
    ui->PasswordListView->setEditTriggers(QAbstractItemView::NoEditTriggers);

//https://github.com/bricke/Qt-AES

}


void MainWindow::fileWatcher()
{
    QTimer* timer = new QTimer();
    timer->setInterval(5000);
    connect(timer, &QTimer::timeout, this, [=](){
        MainWindow::readFile();
    });
    timer->start();
}

void MainWindow::showData(QModelIndex index)
 {
     ui->PasswordListView->text(index).toString();
 }


